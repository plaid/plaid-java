/*
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.575.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.plaid.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.plaid.client.model.BeaconBankAccounts;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * The response schema for &#x60;/beacon/user/account/insights/get&#x60;
 */
@ApiModel(description = "The response schema for `/beacon/user/account/insights/get`")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-09T17:51:17.896278Z[Etc/UTC]")
public class BeaconUserAccountInsightsGetResponse {
  public static final String SERIALIZED_NAME_BEACON_USER_ID = "beacon_user_id";
  @SerializedName(SERIALIZED_NAME_BEACON_USER_ID)
  private String beaconUserId;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private java.sql.Timestamp createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_BANK_ACCOUNT_INSIGHTS = "bank_account_insights";
  @SerializedName(SERIALIZED_NAME_BANK_ACCOUNT_INSIGHTS)
  private BeaconBankAccounts bankAccountInsights;

  public static final String SERIALIZED_NAME_REQUEST_ID = "request_id";
  @SerializedName(SERIALIZED_NAME_REQUEST_ID)
  private String requestId;


  public BeaconUserAccountInsightsGetResponse beaconUserId(String beaconUserId) {
    
    this.beaconUserId = beaconUserId;
    return this;
  }

   /**
   * ID of the associated Beacon User.
   * @return beaconUserId
  **/
  @ApiModelProperty(example = "becusr_42cF1MNo42r9Xj", required = true, value = "ID of the associated Beacon User.")

  public String getBeaconUserId() {
    return beaconUserId;
  }


  public void setBeaconUserId(String beaconUserId) {
    this.beaconUserId = beaconUserId;
  }


  public BeaconUserAccountInsightsGetResponse createdAt(java.sql.Timestamp createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(required = true, value = "")

  public java.sql.Timestamp getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(java.sql.Timestamp createdAt) {
    this.createdAt = createdAt;
  }


  public BeaconUserAccountInsightsGetResponse updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * An ISO8601 formatted timestamp. This field indicates the last time the resource was modified.
   * @return updatedAt
  **/
  @ApiModelProperty(example = "2020-07-24T03:26:02Z", required = true, value = "An ISO8601 formatted timestamp. This field indicates the last time the resource was modified.")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public BeaconUserAccountInsightsGetResponse bankAccountInsights(BeaconBankAccounts bankAccountInsights) {
    
    this.bankAccountInsights = bankAccountInsights;
    return this;
  }

   /**
   * Get bankAccountInsights
   * @return bankAccountInsights
  **/
  @ApiModelProperty(required = true, value = "")

  public BeaconBankAccounts getBankAccountInsights() {
    return bankAccountInsights;
  }


  public void setBankAccountInsights(BeaconBankAccounts bankAccountInsights) {
    this.bankAccountInsights = bankAccountInsights;
  }


  public BeaconUserAccountInsightsGetResponse requestId(String requestId) {
    
    this.requestId = requestId;
    return this;
  }

   /**
   * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
   * @return requestId
  **/
  @ApiModelProperty(required = true, value = "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.")

  public String getRequestId() {
    return requestId;
  }


  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BeaconUserAccountInsightsGetResponse beaconUserAccountInsightsGetResponse = (BeaconUserAccountInsightsGetResponse) o;
    return Objects.equals(this.beaconUserId, beaconUserAccountInsightsGetResponse.beaconUserId) &&
        Objects.equals(this.createdAt, beaconUserAccountInsightsGetResponse.createdAt) &&
        Objects.equals(this.updatedAt, beaconUserAccountInsightsGetResponse.updatedAt) &&
        Objects.equals(this.bankAccountInsights, beaconUserAccountInsightsGetResponse.bankAccountInsights) &&
        Objects.equals(this.requestId, beaconUserAccountInsightsGetResponse.requestId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(beaconUserId, createdAt, updatedAt, bankAccountInsights, requestId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BeaconUserAccountInsightsGetResponse {\n");
    sb.append("    beaconUserId: ").append(toIndentedString(beaconUserId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    bankAccountInsights: ").append(toIndentedString(bankAccountInsights)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

