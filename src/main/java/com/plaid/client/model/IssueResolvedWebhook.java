/*
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.575.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.plaid.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * Webhook notifications are sent only when a subscribed issue is marked as resolved. The payload contains details about the issue at the time of its resolution, focusing on the most essential information.
 */
@ApiModel(description = "Webhook notifications are sent only when a subscribed issue is marked as resolved. The payload contains details about the issue at the time of its resolution, focusing on the most essential information.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-09T17:51:17.896278Z[Etc/UTC]")
public class IssueResolvedWebhook {
  public static final String SERIALIZED_NAME_WEBHOOK_TYPE = "webhook_type";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_TYPE)
  private String webhookType;

  public static final String SERIALIZED_NAME_WEBHOOK_CODE = "webhook_code";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_CODE)
  private String webhookCode;

  public static final String SERIALIZED_NAME_ISSUE_ID = "issue_id";
  @SerializedName(SERIALIZED_NAME_ISSUE_ID)
  private String issueId;

  public static final String SERIALIZED_NAME_ISSUE_DESCRIPTION = "issue_description";
  @SerializedName(SERIALIZED_NAME_ISSUE_DESCRIPTION)
  private String issueDescription;

  public static final String SERIALIZED_NAME_ISSUE_RESOLVED_AT = "issue_resolved_at";
  @SerializedName(SERIALIZED_NAME_ISSUE_RESOLVED_AT)
  private OffsetDateTime issueResolvedAt;

  public static final String SERIALIZED_NAME_INSTITUTION_ID = "institution_id";
  @SerializedName(SERIALIZED_NAME_INSTITUTION_ID)
  private String institutionId;

  public static final String SERIALIZED_NAME_INSTITUTION_NAME = "institution_name";
  @SerializedName(SERIALIZED_NAME_INSTITUTION_NAME)
  private String institutionName;


  public IssueResolvedWebhook webhookType(String webhookType) {
    
    this.webhookType = webhookType;
    return this;
  }

   /**
   * &#x60;ISSUES&#x60;
   * @return webhookType
  **/
  @ApiModelProperty(required = true, value = "`ISSUES`")

  public String getWebhookType() {
    return webhookType;
  }


  public void setWebhookType(String webhookType) {
    this.webhookType = webhookType;
  }


  public IssueResolvedWebhook webhookCode(String webhookCode) {
    
    this.webhookCode = webhookCode;
    return this;
  }

   /**
   * &#x60;ISSUE_RESOLVED&#x60;
   * @return webhookCode
  **/
  @ApiModelProperty(required = true, value = "`ISSUE_RESOLVED`")

  public String getWebhookCode() {
    return webhookCode;
  }


  public void setWebhookCode(String webhookCode) {
    this.webhookCode = webhookCode;
  }


  public IssueResolvedWebhook issueId(String issueId) {
    
    this.issueId = issueId;
    return this;
  }

   /**
   * The unique identifier of the connectivity issue.
   * @return issueId
  **/
  @ApiModelProperty(required = true, value = "The unique identifier of the connectivity issue.")

  public String getIssueId() {
    return issueId;
  }


  public void setIssueId(String issueId) {
    this.issueId = issueId;
  }


  public IssueResolvedWebhook issueDescription(String issueDescription) {
    
    this.issueDescription = issueDescription;
    return this;
  }

   /**
   * A simple description of the error for the end user.
   * @return issueDescription
  **/
  @ApiModelProperty(required = true, value = "A simple description of the error for the end user.")

  public String getIssueDescription() {
    return issueDescription;
  }


  public void setIssueDescription(String issueDescription) {
    this.issueDescription = issueDescription;
  }


  public IssueResolvedWebhook issueResolvedAt(OffsetDateTime issueResolvedAt) {
    
    this.issueResolvedAt = issueResolvedAt;
    return this;
  }

   /**
   * The time when the issue was marked as resolved.
   * @return issueResolvedAt
  **/
  @ApiModelProperty(required = true, value = "The time when the issue was marked as resolved.")

  public OffsetDateTime getIssueResolvedAt() {
    return issueResolvedAt;
  }


  public void setIssueResolvedAt(OffsetDateTime issueResolvedAt) {
    this.issueResolvedAt = issueResolvedAt;
  }


  public IssueResolvedWebhook institutionId(String institutionId) {
    
    this.institutionId = institutionId;
    return this;
  }

   /**
   * The unique identifier of the financial institution involved.
   * @return institutionId
  **/
  @ApiModelProperty(required = true, value = "The unique identifier of the financial institution involved.")

  public String getInstitutionId() {
    return institutionId;
  }


  public void setInstitutionId(String institutionId) {
    this.institutionId = institutionId;
  }


  public IssueResolvedWebhook institutionName(String institutionName) {
    
    this.institutionName = institutionName;
    return this;
  }

   /**
   * The name of the financial institution involved.
   * @return institutionName
  **/
  @ApiModelProperty(required = true, value = "The name of the financial institution involved.")

  public String getInstitutionName() {
    return institutionName;
  }


  public void setInstitutionName(String institutionName) {
    this.institutionName = institutionName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IssueResolvedWebhook issueResolvedWebhook = (IssueResolvedWebhook) o;
    return Objects.equals(this.webhookType, issueResolvedWebhook.webhookType) &&
        Objects.equals(this.webhookCode, issueResolvedWebhook.webhookCode) &&
        Objects.equals(this.issueId, issueResolvedWebhook.issueId) &&
        Objects.equals(this.issueDescription, issueResolvedWebhook.issueDescription) &&
        Objects.equals(this.issueResolvedAt, issueResolvedWebhook.issueResolvedAt) &&
        Objects.equals(this.institutionId, issueResolvedWebhook.institutionId) &&
        Objects.equals(this.institutionName, issueResolvedWebhook.institutionName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(webhookType, webhookCode, issueId, issueDescription, issueResolvedAt, institutionId, institutionName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IssueResolvedWebhook {\n");
    sb.append("    webhookType: ").append(toIndentedString(webhookType)).append("\n");
    sb.append("    webhookCode: ").append(toIndentedString(webhookCode)).append("\n");
    sb.append("    issueId: ").append(toIndentedString(issueId)).append("\n");
    sb.append("    issueDescription: ").append(toIndentedString(issueDescription)).append("\n");
    sb.append("    issueResolvedAt: ").append(toIndentedString(issueResolvedAt)).append("\n");
    sb.append("    institutionId: ").append(toIndentedString(institutionId)).append("\n");
    sb.append("    institutionName: ").append(toIndentedString(institutionName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

