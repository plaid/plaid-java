/*
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.565.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.plaid.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.plaid.client.model.CreditBankIncomeCategory;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;

/**
 * An object representing an income source
 */
@ApiModel(description = "An object representing an income source")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-09-17T16:42:02.150702Z[Etc/UTC]")
public class MonitoringIncomeSource {
  public static final String SERIALIZED_NAME_INCOME_SOURCE_ID = "income_source_id";
  @SerializedName(SERIALIZED_NAME_INCOME_SOURCE_ID)
  private String incomeSourceId;

  public static final String SERIALIZED_NAME_INCOME_DESCRIPTION = "income_description";
  @SerializedName(SERIALIZED_NAME_INCOME_DESCRIPTION)
  private String incomeDescription;

  public static final String SERIALIZED_NAME_INCOME_CATEGORY = "income_category";
  @SerializedName(SERIALIZED_NAME_INCOME_CATEGORY)
  private CreditBankIncomeCategory incomeCategory;

  public static final String SERIALIZED_NAME_LAST_TRANSACTION_DATE = "last_transaction_date";
  @SerializedName(SERIALIZED_NAME_LAST_TRANSACTION_DATE)
  private LocalDate lastTransactionDate;

  public static final String SERIALIZED_NAME_IS_MISSING_INCOME = "is_missing_income";
  @SerializedName(SERIALIZED_NAME_IS_MISSING_INCOME)
  private Boolean isMissingIncome;


  public MonitoringIncomeSource incomeSourceId(String incomeSourceId) {
    
    this.incomeSourceId = incomeSourceId;
    return this;
  }

   /**
   * A unique identifier for an income source
   * @return incomeSourceId
  **/
  @ApiModelProperty(required = true, value = "A unique identifier for an income source")

  public String getIncomeSourceId() {
    return incomeSourceId;
  }


  public void setIncomeSourceId(String incomeSourceId) {
    this.incomeSourceId = incomeSourceId;
  }


  public MonitoringIncomeSource incomeDescription(String incomeDescription) {
    
    this.incomeDescription = incomeDescription;
    return this;
  }

   /**
   * The most common name or original description for the underlying income transactions
   * @return incomeDescription
  **/
  @ApiModelProperty(required = true, value = "The most common name or original description for the underlying income transactions")

  public String getIncomeDescription() {
    return incomeDescription;
  }


  public void setIncomeDescription(String incomeDescription) {
    this.incomeDescription = incomeDescription;
  }


  public MonitoringIncomeSource incomeCategory(CreditBankIncomeCategory incomeCategory) {
    
    this.incomeCategory = incomeCategory;
    return this;
  }

   /**
   * Get incomeCategory
   * @return incomeCategory
  **/
  @ApiModelProperty(required = true, value = "")

  public CreditBankIncomeCategory getIncomeCategory() {
    return incomeCategory;
  }


  public void setIncomeCategory(CreditBankIncomeCategory incomeCategory) {
    this.incomeCategory = incomeCategory;
  }


  public MonitoringIncomeSource lastTransactionDate(LocalDate lastTransactionDate) {
    
    this.lastTransactionDate = lastTransactionDate;
    return this;
  }

   /**
   * The last detected transaction date for this income source
   * @return lastTransactionDate
  **/
  @ApiModelProperty(required = true, value = "The last detected transaction date for this income source")

  public LocalDate getLastTransactionDate() {
    return lastTransactionDate;
  }


  public void setLastTransactionDate(LocalDate lastTransactionDate) {
    this.lastTransactionDate = lastTransactionDate;
  }


  public MonitoringIncomeSource isMissingIncome(Boolean isMissingIncome) {
    
    this.isMissingIncome = isMissingIncome;
    return this;
  }

   /**
   * This represents if the income source is believed to be missing any recent income
   * @return isMissingIncome
  **/
  @ApiModelProperty(required = true, value = "This represents if the income source is believed to be missing any recent income")

  public Boolean getIsMissingIncome() {
    return isMissingIncome;
  }


  public void setIsMissingIncome(Boolean isMissingIncome) {
    this.isMissingIncome = isMissingIncome;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MonitoringIncomeSource monitoringIncomeSource = (MonitoringIncomeSource) o;
    return Objects.equals(this.incomeSourceId, monitoringIncomeSource.incomeSourceId) &&
        Objects.equals(this.incomeDescription, monitoringIncomeSource.incomeDescription) &&
        Objects.equals(this.incomeCategory, monitoringIncomeSource.incomeCategory) &&
        Objects.equals(this.lastTransactionDate, monitoringIncomeSource.lastTransactionDate) &&
        Objects.equals(this.isMissingIncome, monitoringIncomeSource.isMissingIncome);
  }

  @Override
  public int hashCode() {
    return Objects.hash(incomeSourceId, incomeDescription, incomeCategory, lastTransactionDate, isMissingIncome);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MonitoringIncomeSource {\n");
    sb.append("    incomeSourceId: ").append(toIndentedString(incomeSourceId)).append("\n");
    sb.append("    incomeDescription: ").append(toIndentedString(incomeDescription)).append("\n");
    sb.append("    incomeCategory: ").append(toIndentedString(incomeCategory)).append("\n");
    sb.append("    lastTransactionDate: ").append(toIndentedString(lastTransactionDate)).append("\n");
    sb.append("    isMissingIncome: ").append(toIndentedString(isMissingIncome)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

