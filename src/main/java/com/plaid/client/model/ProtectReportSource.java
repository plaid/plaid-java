/*
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.667.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.plaid.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The source that identified or reported the incident.  &#x60;INTERNAL_REVIEW&#x60; - Incident was identified through internal fraud investigations or review processes.  &#x60;USER_SELF_REPORTED&#x60; - Incident was reported directly by the affected user.  &#x60;BANK_FEEDBACK&#x60; - Incident was identified through bank feedback, including ACH returns and connection revocations.  &#x60;NETWORK_FEEDBACK&#x60; - Incident was identified through card network alerts or chargebacks.  &#x60;AUTOMATED_SYSTEM&#x60; - Incident was detected by automated systems such as fraud models or rule engines.  &#x60;THIRD_PARTY_ALERT&#x60; - Incident was identified through external vendor or consortium alerts.  &#x60;OTHER&#x60; - Incident was identified through a source not covered by other categories.
 */
@JsonAdapter(ProtectReportSource.Adapter.class)
public enum ProtectReportSource {
  
  INTERNAL_REVIEW("INTERNAL_REVIEW"),
  
  USER_SELF_REPORTED("USER_SELF_REPORTED"),
  
  BANK_FEEDBACK("BANK_FEEDBACK"),
  
  NETWORK_FEEDBACK("NETWORK_FEEDBACK"),
  
  AUTOMATED_SYSTEM("AUTOMATED_SYSTEM"),
  
  THIRD_PARTY_ALERT("THIRD_PARTY_ALERT"),
  
  OTHER("OTHER"),

  // This is returned when an enum is returned from the API that doesn't exist in the OpenAPI file.
  // Try upgrading your client-library version.
  ENUM_UNKNOWN("ENUM_UNKNOWN");

  private String value;

  ProtectReportSource(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ProtectReportSource fromValue(String value) {
    for (ProtectReportSource b : ProtectReportSource.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    
    return ProtectReportSource.ENUM_UNKNOWN;
  }

  public static class Adapter extends TypeAdapter<ProtectReportSource> {
    @Override
    public void write(final JsonWriter jsonWriter, final ProtectReportSource enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ProtectReportSource read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ProtectReportSource.fromValue(value);
    }
  }
}

