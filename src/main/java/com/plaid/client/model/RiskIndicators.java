/*
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.670.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.plaid.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.plaid.client.model.BankPenaltiesIndicators;
import com.plaid.client.model.GamblingIndicators;
import com.plaid.client.model.LoanDisbursementsIndicators;
import com.plaid.client.model.LoanPaymentsIndicators;
import com.plaid.client.model.NegativeBalanceInsights;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Risk indicators focus on providing signal on the possibility of a borrower defaulting on their loan repayments by providing data points related to its payment behavior, debt, and other relevant financial information, helping lenders gauge the level of risk involved in a certain operation.
 */
@ApiModel(description = "Risk indicators focus on providing signal on the possibility of a borrower defaulting on their loan repayments by providing data points related to its payment behavior, debt, and other relevant financial information, helping lenders gauge the level of risk involved in a certain operation.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-22T18:34:27.647926Z[Etc/UTC]")
public class RiskIndicators {
  public static final String SERIALIZED_NAME_BANK_PENALTIES = "bank_penalties";
  @SerializedName(SERIALIZED_NAME_BANK_PENALTIES)
  private BankPenaltiesIndicators bankPenalties;

  public static final String SERIALIZED_NAME_GAMBLING = "gambling";
  @SerializedName(SERIALIZED_NAME_GAMBLING)
  private GamblingIndicators gambling;

  public static final String SERIALIZED_NAME_LOAN_DISBURSEMENTS = "loan_disbursements";
  @SerializedName(SERIALIZED_NAME_LOAN_DISBURSEMENTS)
  private LoanDisbursementsIndicators loanDisbursements;

  public static final String SERIALIZED_NAME_LOAN_PAYMENTS = "loan_payments";
  @SerializedName(SERIALIZED_NAME_LOAN_PAYMENTS)
  private LoanPaymentsIndicators loanPayments;

  public static final String SERIALIZED_NAME_NEGATIVE_BALANCE = "negative_balance";
  @SerializedName(SERIALIZED_NAME_NEGATIVE_BALANCE)
  private NegativeBalanceInsights negativeBalance;


  public RiskIndicators bankPenalties(BankPenaltiesIndicators bankPenalties) {
    
    this.bankPenalties = bankPenalties;
    return this;
  }

   /**
   * Get bankPenalties
   * @return bankPenalties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BankPenaltiesIndicators getBankPenalties() {
    return bankPenalties;
  }


  public void setBankPenalties(BankPenaltiesIndicators bankPenalties) {
    this.bankPenalties = bankPenalties;
  }


  public RiskIndicators gambling(GamblingIndicators gambling) {
    
    this.gambling = gambling;
    return this;
  }

   /**
   * Get gambling
   * @return gambling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GamblingIndicators getGambling() {
    return gambling;
  }


  public void setGambling(GamblingIndicators gambling) {
    this.gambling = gambling;
  }


  public RiskIndicators loanDisbursements(LoanDisbursementsIndicators loanDisbursements) {
    
    this.loanDisbursements = loanDisbursements;
    return this;
  }

   /**
   * Get loanDisbursements
   * @return loanDisbursements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LoanDisbursementsIndicators getLoanDisbursements() {
    return loanDisbursements;
  }


  public void setLoanDisbursements(LoanDisbursementsIndicators loanDisbursements) {
    this.loanDisbursements = loanDisbursements;
  }


  public RiskIndicators loanPayments(LoanPaymentsIndicators loanPayments) {
    
    this.loanPayments = loanPayments;
    return this;
  }

   /**
   * Get loanPayments
   * @return loanPayments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LoanPaymentsIndicators getLoanPayments() {
    return loanPayments;
  }


  public void setLoanPayments(LoanPaymentsIndicators loanPayments) {
    this.loanPayments = loanPayments;
  }


  public RiskIndicators negativeBalance(NegativeBalanceInsights negativeBalance) {
    
    this.negativeBalance = negativeBalance;
    return this;
  }

   /**
   * Get negativeBalance
   * @return negativeBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NegativeBalanceInsights getNegativeBalance() {
    return negativeBalance;
  }


  public void setNegativeBalance(NegativeBalanceInsights negativeBalance) {
    this.negativeBalance = negativeBalance;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RiskIndicators riskIndicators = (RiskIndicators) o;
    return Objects.equals(this.bankPenalties, riskIndicators.bankPenalties) &&
        Objects.equals(this.gambling, riskIndicators.gambling) &&
        Objects.equals(this.loanDisbursements, riskIndicators.loanDisbursements) &&
        Objects.equals(this.loanPayments, riskIndicators.loanPayments) &&
        Objects.equals(this.negativeBalance, riskIndicators.negativeBalance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bankPenalties, gambling, loanDisbursements, loanPayments, negativeBalance);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RiskIndicators {\n");
    sb.append("    bankPenalties: ").append(toIndentedString(bankPenalties)).append("\n");
    sb.append("    gambling: ").append(toIndentedString(gambling)).append("\n");
    sb.append("    loanDisbursements: ").append(toIndentedString(loanDisbursements)).append("\n");
    sb.append("    loanPayments: ").append(toIndentedString(loanPayments)).append("\n");
    sb.append("    negativeBalance: ").append(toIndentedString(negativeBalance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

