/*
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.651.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.plaid.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.plaid.client.model.RecommendationString;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;

/**
 * Conveys information on if a retry is recommended on a given date
 */
@ApiModel(description = "Conveys information on if a retry is recommended on a given date")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-17T20:39:11.801735Z[Etc/UTC]")
public class SignalScheduleRecommendation {
  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  private LocalDate date;

  public static final String SERIALIZED_NAME_RECOMMENDATION = "recommendation";
  @SerializedName(SERIALIZED_NAME_RECOMMENDATION)
  private RecommendationString recommendation;

  public static final String SERIALIZED_NAME_RANK = "rank";
  @SerializedName(SERIALIZED_NAME_RANK)
  private Integer rank;


  public SignalScheduleRecommendation date(LocalDate date) {
    
    this.date = date;
    return this;
  }

   /**
   * The specific date for submitting the debit entry, formatted in ISO 8601 (e.g., \&quot;2025-01-17\&quot;).
   * @return date
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The specific date for submitting the debit entry, formatted in ISO 8601 (e.g., \"2025-01-17\").")

  public LocalDate getDate() {
    return date;
  }


  public void setDate(LocalDate date) {
    this.date = date;
  }


  public SignalScheduleRecommendation recommendation(RecommendationString recommendation) {
    
    this.recommendation = recommendation;
    return this;
  }

   /**
   * Get recommendation
   * @return recommendation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RecommendationString getRecommendation() {
    return recommendation;
  }


  public void setRecommendation(RecommendationString recommendation) {
    this.recommendation = recommendation;
  }


  public SignalScheduleRecommendation rank(Integer rank) {
    
    this.rank = rank;
    return this;
  }

   /**
   * The rank of the recommendation based on the likelihood of debit success, with 1 representing the most optimal date. Dates with &#x60;NOT_RECOMMENDED&#x60; or &#x60;UNKNOWN&#x60; will have rank &#x60;null&#x60;.
   * @return rank
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The rank of the recommendation based on the likelihood of debit success, with 1 representing the most optimal date. Dates with `NOT_RECOMMENDED` or `UNKNOWN` will have rank `null`.")

  public Integer getRank() {
    return rank;
  }


  public void setRank(Integer rank) {
    this.rank = rank;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SignalScheduleRecommendation signalScheduleRecommendation = (SignalScheduleRecommendation) o;
    return Objects.equals(this.date, signalScheduleRecommendation.date) &&
        Objects.equals(this.recommendation, signalScheduleRecommendation.recommendation) &&
        Objects.equals(this.rank, signalScheduleRecommendation.rank);
  }

  @Override
  public int hashCode() {
    return Objects.hash(date, recommendation, rank);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SignalScheduleRecommendation {\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    recommendation: ").append(toIndentedString(recommendation)).append("\n");
    sb.append("    rank: ").append(toIndentedString(rank)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

