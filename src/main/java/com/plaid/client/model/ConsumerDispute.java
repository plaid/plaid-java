/*
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.575.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.plaid.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.plaid.client.model.ConsumerDisputeCategory;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;

/**
 * The information about a previously submitted valid dispute statement by the consumer
 */
@ApiModel(description = "The information about a previously submitted valid dispute statement by the consumer")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-09T17:51:17.896278Z[Etc/UTC]")
public class ConsumerDispute {
  public static final String SERIALIZED_NAME_CONSUMER_DISPUTE_ID = "consumer_dispute_id";
  @SerializedName(SERIALIZED_NAME_CONSUMER_DISPUTE_ID)
  private String consumerDisputeId;

  public static final String SERIALIZED_NAME_DISPUTE_FIELD_CREATE_DATE = "dispute_field_create_date";
  @SerializedName(SERIALIZED_NAME_DISPUTE_FIELD_CREATE_DATE)
  private LocalDate disputeFieldCreateDate;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private ConsumerDisputeCategory category;

  public static final String SERIALIZED_NAME_STATEMENT = "statement";
  @SerializedName(SERIALIZED_NAME_STATEMENT)
  private String statement;


  public ConsumerDispute consumerDisputeId(String consumerDisputeId) {
    
    this.consumerDisputeId = consumerDisputeId;
    return this;
  }

   /**
   * A unique identifier (UUID) of the consumer dispute that can be used for troubleshooting
   * @return consumerDisputeId
  **/
  @ApiModelProperty(required = true, value = "A unique identifier (UUID) of the consumer dispute that can be used for troubleshooting")

  public String getConsumerDisputeId() {
    return consumerDisputeId;
  }


  public void setConsumerDisputeId(String consumerDisputeId) {
    this.consumerDisputeId = consumerDisputeId;
  }


  public ConsumerDispute disputeFieldCreateDate(LocalDate disputeFieldCreateDate) {
    
    this.disputeFieldCreateDate = disputeFieldCreateDate;
    return this;
  }

   /**
   * Date of the disputed field (e.g. transaction date), in an ISO 8601 format (YYYY-MM-DD)
   * @return disputeFieldCreateDate
  **/
  @ApiModelProperty(required = true, value = "Date of the disputed field (e.g. transaction date), in an ISO 8601 format (YYYY-MM-DD)")

  public LocalDate getDisputeFieldCreateDate() {
    return disputeFieldCreateDate;
  }


  public void setDisputeFieldCreateDate(LocalDate disputeFieldCreateDate) {
    this.disputeFieldCreateDate = disputeFieldCreateDate;
  }


  public ConsumerDispute category(ConsumerDisputeCategory category) {
    
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @ApiModelProperty(required = true, value = "")

  public ConsumerDisputeCategory getCategory() {
    return category;
  }


  public void setCategory(ConsumerDisputeCategory category) {
    this.category = category;
  }


  public ConsumerDispute statement(String statement) {
    
    this.statement = statement;
    return this;
  }

   /**
   * Text content of dispute
   * @return statement
  **/
  @ApiModelProperty(required = true, value = "Text content of dispute")

  public String getStatement() {
    return statement;
  }


  public void setStatement(String statement) {
    this.statement = statement;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConsumerDispute consumerDispute = (ConsumerDispute) o;
    return Objects.equals(this.consumerDisputeId, consumerDispute.consumerDisputeId) &&
        Objects.equals(this.disputeFieldCreateDate, consumerDispute.disputeFieldCreateDate) &&
        Objects.equals(this.category, consumerDispute.category) &&
        Objects.equals(this.statement, consumerDispute.statement);
  }

  @Override
  public int hashCode() {
    return Objects.hash(consumerDisputeId, disputeFieldCreateDate, category, statement);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConsumerDispute {\n");
    sb.append("    consumerDisputeId: ").append(toIndentedString(consumerDisputeId)).append("\n");
    sb.append("    disputeFieldCreateDate: ").append(toIndentedString(disputeFieldCreateDate)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    statement: ").append(toIndentedString(statement)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

