/*
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.651.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.plaid.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * Provides the fields of a notification
 */
@ApiModel(description = "Provides the fields of a notification")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-17T19:29:35.396269Z[Etc/UTC]")
public class TCHNotification {
  public static final String SERIALIZED_NAME_MESSAGE_ID = "messageId";
  @SerializedName(SERIALIZED_NAME_MESSAGE_ID)
  private String messageId;

  public static final String SERIALIZED_NAME_CONVERSATION_ID = "conversationId";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_ID)
  private String conversationId;

  public static final String SERIALIZED_NAME_TOKEN_REQUESTOR_ID = "tokenRequestorId";
  @SerializedName(SERIALIZED_NAME_TOKEN_REQUESTOR_ID)
  private String tokenRequestorId;

  public static final String SERIALIZED_NAME_TOKEN_REFERENCE_ID = "tokenReferenceId";
  @SerializedName(SERIALIZED_NAME_TOKEN_REFERENCE_ID)
  private String tokenReferenceId;

  public static final String SERIALIZED_NAME_TOKEN_TIMESTAMP = "tokenTimestamp";
  @SerializedName(SERIALIZED_NAME_TOKEN_TIMESTAMP)
  private OffsetDateTime tokenTimestamp;


  public TCHNotification messageId(String messageId) {
    
    this.messageId = messageId;
    return this;
  }

   /**
   * Unique message identifier (GUID v4 format) of this command, used for tracking purposes. Each request and its response have the same value.
   * @return messageId
  **/
  @ApiModelProperty(required = true, value = "Unique message identifier (GUID v4 format) of this command, used for tracking purposes. Each request and its response have the same value.")

  public String getMessageId() {
    return messageId;
  }


  public void setMessageId(String messageId) {
    this.messageId = messageId;
  }


  public TCHNotification conversationId(String conversationId) {
    
    this.conversationId = conversationId;
    return this;
  }

   /**
   * Message identifier assigned for the entire conversation (GUID v4 format). Typically, it is generated by the initiator of the flow. The response has the same value with its request.
   * @return conversationId
  **/
  @ApiModelProperty(required = true, value = "Message identifier assigned for the entire conversation (GUID v4 format). Typically, it is generated by the initiator of the flow. The response has the same value with its request.")

  public String getConversationId() {
    return conversationId;
  }


  public void setConversationId(String conversationId) {
    this.conversationId = conversationId;
  }


  public TCHNotification tokenRequestorId(String tokenRequestorId) {
    
    this.tokenRequestorId = tokenRequestorId;
    return this;
  }

   /**
   * Token requestor identifier associated to the domain to which the token belongs.
   * @return tokenRequestorId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Token requestor identifier associated to the domain to which the token belongs.")

  public String getTokenRequestorId() {
    return tokenRequestorId;
  }


  public void setTokenRequestorId(String tokenRequestorId) {
    this.tokenRequestorId = tokenRequestorId;
  }


  public TCHNotification tokenReferenceId(String tokenReferenceId) {
    
    this.tokenReferenceId = tokenReferenceId;
    return this;
  }

   /**
   * Unique reference identifier for the token generated.
   * @return tokenReferenceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique reference identifier for the token generated.")

  public String getTokenReferenceId() {
    return tokenReferenceId;
  }


  public void setTokenReferenceId(String tokenReferenceId) {
    this.tokenReferenceId = tokenReferenceId;
  }


  public TCHNotification tokenTimestamp(OffsetDateTime tokenTimestamp) {
    
    this.tokenTimestamp = tokenTimestamp;
    return this;
  }

   /**
   * The event timestamp of the last state change.
   * @return tokenTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-07-15T14:46:41.375Z", value = "The event timestamp of the last state change.")

  public OffsetDateTime getTokenTimestamp() {
    return tokenTimestamp;
  }


  public void setTokenTimestamp(OffsetDateTime tokenTimestamp) {
    this.tokenTimestamp = tokenTimestamp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TCHNotification tcHNotification = (TCHNotification) o;
    return Objects.equals(this.messageId, tcHNotification.messageId) &&
        Objects.equals(this.conversationId, tcHNotification.conversationId) &&
        Objects.equals(this.tokenRequestorId, tcHNotification.tokenRequestorId) &&
        Objects.equals(this.tokenReferenceId, tcHNotification.tokenReferenceId) &&
        Objects.equals(this.tokenTimestamp, tcHNotification.tokenTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messageId, conversationId, tokenRequestorId, tokenReferenceId, tokenTimestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TCHNotification {\n");
    sb.append("    messageId: ").append(toIndentedString(messageId)).append("\n");
    sb.append("    conversationId: ").append(toIndentedString(conversationId)).append("\n");
    sb.append("    tokenRequestorId: ").append(toIndentedString(tokenRequestorId)).append("\n");
    sb.append("    tokenReferenceId: ").append(toIndentedString(tokenReferenceId)).append("\n");
    sb.append("    tokenTimestamp: ").append(toIndentedString(tokenTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

