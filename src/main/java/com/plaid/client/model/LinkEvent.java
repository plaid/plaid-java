/*
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.565.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.plaid.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.plaid.client.model.LinkEventMetadata;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * An event that occurred while the user was going through Link
 */
@ApiModel(description = "An event that occurred while the user was going through Link")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-09-17T16:42:02.150702Z[Etc/UTC]")
public class LinkEvent {
  public static final String SERIALIZED_NAME_EVENT_NAME = "event_name";
  @SerializedName(SERIALIZED_NAME_EVENT_NAME)
  private String eventName;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private String timestamp;

  public static final String SERIALIZED_NAME_EVENT_ID = "event_id";
  @SerializedName(SERIALIZED_NAME_EVENT_ID)
  private String eventId;

  public static final String SERIALIZED_NAME_EVENT_METADATA = "event_metadata";
  @SerializedName(SERIALIZED_NAME_EVENT_METADATA)
  private LinkEventMetadata eventMetadata;


  public LinkEvent eventName(String eventName) {
    
    this.eventName = eventName;
    return this;
  }

   /**
   * Event name
   * @return eventName
  **/
  @ApiModelProperty(required = true, value = "Event name")

  public String getEventName() {
    return eventName;
  }


  public void setEventName(String eventName) {
    this.eventName = eventName;
  }


  public LinkEvent timestamp(String timestamp) {
    
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
   * @return timestamp
  **/
  @ApiModelProperty(required = true, value = "Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.")

  public String getTimestamp() {
    return timestamp;
  }


  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }


  public LinkEvent eventId(String eventId) {
    
    this.eventId = eventId;
    return this;
  }

   /**
   * UUID that can be used to deduplicate events
   * @return eventId
  **/
  @ApiModelProperty(required = true, value = "UUID that can be used to deduplicate events")

  public String getEventId() {
    return eventId;
  }


  public void setEventId(String eventId) {
    this.eventId = eventId;
  }


  public LinkEvent eventMetadata(LinkEventMetadata eventMetadata) {
    
    this.eventMetadata = eventMetadata;
    return this;
  }

   /**
   * Get eventMetadata
   * @return eventMetadata
  **/
  @ApiModelProperty(required = true, value = "")

  public LinkEventMetadata getEventMetadata() {
    return eventMetadata;
  }


  public void setEventMetadata(LinkEventMetadata eventMetadata) {
    this.eventMetadata = eventMetadata;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LinkEvent linkEvent = (LinkEvent) o;
    return Objects.equals(this.eventName, linkEvent.eventName) &&
        Objects.equals(this.timestamp, linkEvent.timestamp) &&
        Objects.equals(this.eventId, linkEvent.eventId) &&
        Objects.equals(this.eventMetadata, linkEvent.eventMetadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventName, timestamp, eventId, eventMetadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LinkEvent {\n");
    sb.append("    eventName: ").append(toIndentedString(eventName)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    eventId: ").append(toIndentedString(eventId)).append("\n");
    sb.append("    eventMetadata: ").append(toIndentedString(eventMetadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

