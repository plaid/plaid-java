/*
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.575.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.plaid.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.plaid.client.model.HiddenMatchSummaryCode;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Result summary object specifying how the &#x60;address&#x60; field matched for fields that are only present on an international KYC check.
 */
@ApiModel(description = "Result summary object specifying how the `address` field matched for fields that are only present on an international KYC check.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-09T17:51:17.896278Z[Etc/UTC]")
public class KYCCheckDetailsInternationalAddress {
  public static final String SERIALIZED_NAME_BUILDING = "building";
  @SerializedName(SERIALIZED_NAME_BUILDING)
  private HiddenMatchSummaryCode building;

  public static final String SERIALIZED_NAME_COUNTY = "county";
  @SerializedName(SERIALIZED_NAME_COUNTY)
  private HiddenMatchSummaryCode county;

  public static final String SERIALIZED_NAME_DISTRICT = "district";
  @SerializedName(SERIALIZED_NAME_DISTRICT)
  private HiddenMatchSummaryCode district;

  public static final String SERIALIZED_NAME_HOUSE_NUMBER = "house_number";
  @SerializedName(SERIALIZED_NAME_HOUSE_NUMBER)
  private HiddenMatchSummaryCode houseNumber;

  public static final String SERIALIZED_NAME_SUBPREMISE = "subpremise";
  @SerializedName(SERIALIZED_NAME_SUBPREMISE)
  private HiddenMatchSummaryCode subpremise;

  public static final String SERIALIZED_NAME_THOROUGHFARE = "thoroughfare";
  @SerializedName(SERIALIZED_NAME_THOROUGHFARE)
  private HiddenMatchSummaryCode thoroughfare;


  public KYCCheckDetailsInternationalAddress building(HiddenMatchSummaryCode building) {
    
    this.building = building;
    return this;
  }

   /**
   * Get building
   * @return building
  **/
  @ApiModelProperty(required = true, value = "")

  public HiddenMatchSummaryCode getBuilding() {
    return building;
  }


  public void setBuilding(HiddenMatchSummaryCode building) {
    this.building = building;
  }


  public KYCCheckDetailsInternationalAddress county(HiddenMatchSummaryCode county) {
    
    this.county = county;
    return this;
  }

   /**
   * Get county
   * @return county
  **/
  @ApiModelProperty(required = true, value = "")

  public HiddenMatchSummaryCode getCounty() {
    return county;
  }


  public void setCounty(HiddenMatchSummaryCode county) {
    this.county = county;
  }


  public KYCCheckDetailsInternationalAddress district(HiddenMatchSummaryCode district) {
    
    this.district = district;
    return this;
  }

   /**
   * Get district
   * @return district
  **/
  @ApiModelProperty(required = true, value = "")

  public HiddenMatchSummaryCode getDistrict() {
    return district;
  }


  public void setDistrict(HiddenMatchSummaryCode district) {
    this.district = district;
  }


  public KYCCheckDetailsInternationalAddress houseNumber(HiddenMatchSummaryCode houseNumber) {
    
    this.houseNumber = houseNumber;
    return this;
  }

   /**
   * Get houseNumber
   * @return houseNumber
  **/
  @ApiModelProperty(required = true, value = "")

  public HiddenMatchSummaryCode getHouseNumber() {
    return houseNumber;
  }


  public void setHouseNumber(HiddenMatchSummaryCode houseNumber) {
    this.houseNumber = houseNumber;
  }


  public KYCCheckDetailsInternationalAddress subpremise(HiddenMatchSummaryCode subpremise) {
    
    this.subpremise = subpremise;
    return this;
  }

   /**
   * Get subpremise
   * @return subpremise
  **/
  @ApiModelProperty(required = true, value = "")

  public HiddenMatchSummaryCode getSubpremise() {
    return subpremise;
  }


  public void setSubpremise(HiddenMatchSummaryCode subpremise) {
    this.subpremise = subpremise;
  }


  public KYCCheckDetailsInternationalAddress thoroughfare(HiddenMatchSummaryCode thoroughfare) {
    
    this.thoroughfare = thoroughfare;
    return this;
  }

   /**
   * Get thoroughfare
   * @return thoroughfare
  **/
  @ApiModelProperty(required = true, value = "")

  public HiddenMatchSummaryCode getThoroughfare() {
    return thoroughfare;
  }


  public void setThoroughfare(HiddenMatchSummaryCode thoroughfare) {
    this.thoroughfare = thoroughfare;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KYCCheckDetailsInternationalAddress kyCCheckDetailsInternationalAddress = (KYCCheckDetailsInternationalAddress) o;
    return Objects.equals(this.building, kyCCheckDetailsInternationalAddress.building) &&
        Objects.equals(this.county, kyCCheckDetailsInternationalAddress.county) &&
        Objects.equals(this.district, kyCCheckDetailsInternationalAddress.district) &&
        Objects.equals(this.houseNumber, kyCCheckDetailsInternationalAddress.houseNumber) &&
        Objects.equals(this.subpremise, kyCCheckDetailsInternationalAddress.subpremise) &&
        Objects.equals(this.thoroughfare, kyCCheckDetailsInternationalAddress.thoroughfare);
  }

  @Override
  public int hashCode() {
    return Objects.hash(building, county, district, houseNumber, subpremise, thoroughfare);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KYCCheckDetailsInternationalAddress {\n");
    sb.append("    building: ").append(toIndentedString(building)).append("\n");
    sb.append("    county: ").append(toIndentedString(county)).append("\n");
    sb.append("    district: ").append(toIndentedString(district)).append("\n");
    sb.append("    houseNumber: ").append(toIndentedString(houseNumber)).append("\n");
    sb.append("    subpremise: ").append(toIndentedString(subpremise)).append("\n");
    sb.append("    thoroughfare: ").append(toIndentedString(thoroughfare)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

