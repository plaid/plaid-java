/*
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.667.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.plaid.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.plaid.client.model.CreditBankIncomeCategory;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CraMonitoringInsightsSubscribeRequest defines the request schema for &#x60;/cra/monitoring_insights/subscribe&#x60;
 */
@ApiModel(description = "CraMonitoringInsightsSubscribeRequest defines the request schema for `/cra/monitoring_insights/subscribe`")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-03T21:56:48.568994Z[Etc/UTC]")
public class CraMonitoringInsightsSubscribeRequest {
  public static final String SERIALIZED_NAME_CLIENT_ID = "client_id";
  @SerializedName(SERIALIZED_NAME_CLIENT_ID)
  private String clientId;

  public static final String SERIALIZED_NAME_SECRET = "secret";
  @SerializedName(SERIALIZED_NAME_SECRET)
  private String secret;

  public static final String SERIALIZED_NAME_USER_TOKEN = "user_token";
  @SerializedName(SERIALIZED_NAME_USER_TOKEN)
  private String userToken;

  public static final String SERIALIZED_NAME_ITEM_ID = "item_id";
  @SerializedName(SERIALIZED_NAME_ITEM_ID)
  private String itemId;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_WEBHOOK = "webhook";
  @SerializedName(SERIALIZED_NAME_WEBHOOK)
  private String webhook;

  public static final String SERIALIZED_NAME_INCOME_CATEGORIES = "income_categories";
  @SerializedName(SERIALIZED_NAME_INCOME_CATEGORIES)
  private List<CreditBankIncomeCategory> incomeCategories = null;


  public CraMonitoringInsightsSubscribeRequest clientId(String clientId) {
    
    this.clientId = clientId;
    return this;
  }

   /**
   * Your Plaid API &#x60;client_id&#x60;. The &#x60;client_id&#x60; is required and may be provided either in the &#x60;PLAID-CLIENT-ID&#x60; header or as part of a request body.
   * @return clientId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.")

  public String getClientId() {
    return clientId;
  }


  public void setClientId(String clientId) {
    this.clientId = clientId;
  }


  public CraMonitoringInsightsSubscribeRequest secret(String secret) {
    
    this.secret = secret;
    return this;
  }

   /**
   * Your Plaid API &#x60;secret&#x60;. The &#x60;secret&#x60; is required and may be provided either in the &#x60;PLAID-SECRET&#x60; header or as part of a request body.
   * @return secret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.")

  public String getSecret() {
    return secret;
  }


  public void setSecret(String secret) {
    this.secret = secret;
  }


  public CraMonitoringInsightsSubscribeRequest userToken(String userToken) {
    
    this.userToken = userToken;
    return this;
  }

   /**
   * The user token associated with the User data is being requested for.
   * @return userToken
  **/
  @ApiModelProperty(required = true, value = "The user token associated with the User data is being requested for.")

  public String getUserToken() {
    return userToken;
  }


  public void setUserToken(String userToken) {
    this.userToken = userToken;
  }


  public CraMonitoringInsightsSubscribeRequest itemId(String itemId) {
    
    this.itemId = itemId;
    return this;
  }

   /**
   * The item ID to subscribe for Cash Flow Updates.
   * @return itemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The item ID to subscribe for Cash Flow Updates.")

  public String getItemId() {
    return itemId;
  }


  public void setItemId(String itemId) {
    this.itemId = itemId;
  }


  public CraMonitoringInsightsSubscribeRequest userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    this.userId = userId;
  }


  public CraMonitoringInsightsSubscribeRequest webhook(String webhook) {
    
    this.webhook = webhook;
    return this;
  }

   /**
   * URL to which Plaid will send Cash Flow Updates webhooks, for example when the requested Cash Flow Updates report is ready.
   * @return webhook
  **/
  @ApiModelProperty(required = true, value = "URL to which Plaid will send Cash Flow Updates webhooks, for example when the requested Cash Flow Updates report is ready.")

  public String getWebhook() {
    return webhook;
  }


  public void setWebhook(String webhook) {
    this.webhook = webhook;
  }


  public CraMonitoringInsightsSubscribeRequest incomeCategories(List<CreditBankIncomeCategory> incomeCategories) {
    
    this.incomeCategories = incomeCategories;
    return this;
  }

  public CraMonitoringInsightsSubscribeRequest addIncomeCategoriesItem(CreditBankIncomeCategory incomeCategoriesItem) {
    if (this.incomeCategories == null) {
      this.incomeCategories = new ArrayList<>();
    }
    this.incomeCategories.add(incomeCategoriesItem);
    return this;
  }

   /**
   * Income categories to include in Cash Flow Updates. If empty or &#x60;null&#x60;, this field will default to including all possible categories.
   * @return incomeCategories
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Income categories to include in Cash Flow Updates. If empty or `null`, this field will default to including all possible categories.")

  public List<CreditBankIncomeCategory> getIncomeCategories() {
    return incomeCategories;
  }


  public void setIncomeCategories(List<CreditBankIncomeCategory> incomeCategories) {
    this.incomeCategories = incomeCategories;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CraMonitoringInsightsSubscribeRequest craMonitoringInsightsSubscribeRequest = (CraMonitoringInsightsSubscribeRequest) o;
    return Objects.equals(this.clientId, craMonitoringInsightsSubscribeRequest.clientId) &&
        Objects.equals(this.secret, craMonitoringInsightsSubscribeRequest.secret) &&
        Objects.equals(this.userToken, craMonitoringInsightsSubscribeRequest.userToken) &&
        Objects.equals(this.itemId, craMonitoringInsightsSubscribeRequest.itemId) &&
        Objects.equals(this.userId, craMonitoringInsightsSubscribeRequest.userId) &&
        Objects.equals(this.webhook, craMonitoringInsightsSubscribeRequest.webhook) &&
        Objects.equals(this.incomeCategories, craMonitoringInsightsSubscribeRequest.incomeCategories);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, secret, userToken, itemId, userId, webhook, incomeCategories);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CraMonitoringInsightsSubscribeRequest {\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("    userToken: ").append(toIndentedString(userToken)).append("\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    webhook: ").append(toIndentedString(webhook)).append("\n");
    sb.append("    incomeCategories: ").append(toIndentedString(incomeCategories)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

