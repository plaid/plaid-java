/*
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.11.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.plaid.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Specifies options for initializing Link for use with the Auth product. This field is currently only required if using the Flexible Auth product (currently in closed beta).
 */
@ApiModel(description = "Specifies options for initializing Link for use with the Auth product. This field is currently only required if using the Flexible Auth product (currently in closed beta).")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-03-31T09:49:55.055Z[GMT]")
public class LinkTokenCreateRequestAuth {
  /**
   * The optional Auth flow to use. Currently only used to enable Flexible Auth.
   */
  @JsonAdapter(AuthFlowEnum.Adapter.class)
  public enum AuthFlowEnum {
    FLEXIBLE_AUTH("FLEXIBLE_AUTH");

    private String value;

    AuthFlowEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AuthFlowEnum fromValue(String value) {
      for (AuthFlowEnum b : AuthFlowEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AuthFlowEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AuthFlowEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AuthFlowEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AuthFlowEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_AUTH_FLOW = "auth_flow";
  @SerializedName(SERIALIZED_NAME_AUTH_FLOW)
  private AuthFlowEnum authFlow;


  public LinkTokenCreateRequestAuth authFlow(AuthFlowEnum authFlow) {
    
    this.authFlow = authFlow;
    return this;
  }

   /**
   * The optional Auth flow to use. Currently only used to enable Flexible Auth.
   * @return authFlow
  **/
  @ApiModelProperty(required = true, value = "The optional Auth flow to use. Currently only used to enable Flexible Auth.")

  public AuthFlowEnum getAuthFlow() {
    return authFlow;
  }


  public void setAuthFlow(AuthFlowEnum authFlow) {
    this.authFlow = authFlow;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LinkTokenCreateRequestAuth linkTokenCreateRequestAuth = (LinkTokenCreateRequestAuth) o;
    return Objects.equals(this.authFlow, linkTokenCreateRequestAuth.authFlow);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authFlow);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LinkTokenCreateRequestAuth {\n");
    sb.append("    authFlow: ").append(toIndentedString(authFlow)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

