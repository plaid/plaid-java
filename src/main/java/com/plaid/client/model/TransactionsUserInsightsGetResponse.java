/*
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.565.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.plaid.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.plaid.client.model.CategoryInsights;
import com.plaid.client.model.CounterpartyInsights;
import com.plaid.client.model.RecurringTransactions;
import com.plaid.client.model.UserDataOverview;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TransactionsUserInsightsGetResponse defines the response schema for &#x60;/beta/transactions/user_insights/v1/get&#x60;.
 */
@ApiModel(description = "TransactionsUserInsightsGetResponse defines the response schema for `/beta/transactions/user_insights/v1/get`.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-09-17T16:42:02.150702Z[Etc/UTC]")
public class TransactionsUserInsightsGetResponse {
  public static final String SERIALIZED_NAME_USER_DATA_OVERVIEW = "user_data_overview";
  @SerializedName(SERIALIZED_NAME_USER_DATA_OVERVIEW)
  private UserDataOverview userDataOverview;

  public static final String SERIALIZED_NAME_COUNTERPARTY_INSIGHTS = "counterparty_insights";
  @SerializedName(SERIALIZED_NAME_COUNTERPARTY_INSIGHTS)
  private CounterpartyInsights counterpartyInsights;

  public static final String SERIALIZED_NAME_CATEGORY_INSIGHTS = "category_insights";
  @SerializedName(SERIALIZED_NAME_CATEGORY_INSIGHTS)
  private CategoryInsights categoryInsights;

  public static final String SERIALIZED_NAME_RECURRING_TRANSACTIONS = "recurring_transactions";
  @SerializedName(SERIALIZED_NAME_RECURRING_TRANSACTIONS)
  private RecurringTransactions recurringTransactions;


  public TransactionsUserInsightsGetResponse userDataOverview(UserDataOverview userDataOverview) {
    
    this.userDataOverview = userDataOverview;
    return this;
  }

   /**
   * Get userDataOverview
   * @return userDataOverview
  **/
  @ApiModelProperty(required = true, value = "")

  public UserDataOverview getUserDataOverview() {
    return userDataOverview;
  }


  public void setUserDataOverview(UserDataOverview userDataOverview) {
    this.userDataOverview = userDataOverview;
  }


  public TransactionsUserInsightsGetResponse counterpartyInsights(CounterpartyInsights counterpartyInsights) {
    
    this.counterpartyInsights = counterpartyInsights;
    return this;
  }

   /**
   * Get counterpartyInsights
   * @return counterpartyInsights
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CounterpartyInsights getCounterpartyInsights() {
    return counterpartyInsights;
  }


  public void setCounterpartyInsights(CounterpartyInsights counterpartyInsights) {
    this.counterpartyInsights = counterpartyInsights;
  }


  public TransactionsUserInsightsGetResponse categoryInsights(CategoryInsights categoryInsights) {
    
    this.categoryInsights = categoryInsights;
    return this;
  }

   /**
   * Get categoryInsights
   * @return categoryInsights
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CategoryInsights getCategoryInsights() {
    return categoryInsights;
  }


  public void setCategoryInsights(CategoryInsights categoryInsights) {
    this.categoryInsights = categoryInsights;
  }


  public TransactionsUserInsightsGetResponse recurringTransactions(RecurringTransactions recurringTransactions) {
    
    this.recurringTransactions = recurringTransactions;
    return this;
  }

   /**
   * Get recurringTransactions
   * @return recurringTransactions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RecurringTransactions getRecurringTransactions() {
    return recurringTransactions;
  }


  public void setRecurringTransactions(RecurringTransactions recurringTransactions) {
    this.recurringTransactions = recurringTransactions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionsUserInsightsGetResponse transactionsUserInsightsGetResponse = (TransactionsUserInsightsGetResponse) o;
    return Objects.equals(this.userDataOverview, transactionsUserInsightsGetResponse.userDataOverview) &&
        Objects.equals(this.counterpartyInsights, transactionsUserInsightsGetResponse.counterpartyInsights) &&
        Objects.equals(this.categoryInsights, transactionsUserInsightsGetResponse.categoryInsights) &&
        Objects.equals(this.recurringTransactions, transactionsUserInsightsGetResponse.recurringTransactions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userDataOverview, counterpartyInsights, categoryInsights, recurringTransactions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionsUserInsightsGetResponse {\n");
    sb.append("    userDataOverview: ").append(toIndentedString(userDataOverview)).append("\n");
    sb.append("    counterpartyInsights: ").append(toIndentedString(counterpartyInsights)).append("\n");
    sb.append("    categoryInsights: ").append(toIndentedString(categoryInsights)).append("\n");
    sb.append("    recurringTransactions: ").append(toIndentedString(recurringTransactions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

